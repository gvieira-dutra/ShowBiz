@model GVD2247A5.Models.EpisodeAddFormViewModel

@{
    ViewBag.Title = "Add New Episode";
}

<script src="//cdn.ckeditor.com/4.6.2/standard/ckeditor.js"></script>

<h2>Add Episode to @Model.ShowName</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new {enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

<div>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.ShowId)

    <dl class="dl-horizontal">

        <dt>
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label " })
        </dt>
        <dd>
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", autofocus = true } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </dd>


    </dl>
    <dl class="dl-horizontal">

        <dt>
            @Html.LabelFor(model => model.SeasonNumber, htmlAttributes: new { @class = "col-form-label " })
        </dt>
        <dd>

            @Html.EditorFor(model => model.SeasonNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "1" } })
            @Html.ValidationMessageFor(model => model.SeasonNumber, "", new { @class = "text-danger" })
        </dd>
    </dl>
    <dl class="dl-horizontal">

        <dt>
            @Html.LabelFor(model => model.EpisodeNumber, htmlAttributes: new { @class = "col-form-label " })
        </dt>
        <dd>
            @Html.EditorFor(model => model.EpisodeNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EpisodeNumber, "", new { @class = "text-danger" })
        </dd>
    </dl>

    <dl class="dl-horizontal">

        <dt>
            @Html.LabelFor(model => model.AirDate, htmlAttributes: new { @class = "col-form-label " })
        </dt>
        <dd>
            @Html.EditorFor(model => model.AirDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(model => model.AirDate, "", new { @class = "text-danger" })
        </dd>
    </dl>

    <dl class="dl-horizontal">

        <dt>
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "col-form-label " })
        </dt>
        <dd>
            @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
        </dd>
    </dl>
    <dl class="dl-horizontal">

        <dt>
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "col-form-label " })
        </dt>
        <dd>

            @Html.DropDownList("GenreId", Model.GenreList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
        </dd>
    </dl>

    <dl class="dl-horizontal">
        <dt>
            @Html.LabelFor(model => model.Premise, htmlAttributes: new { @class = "control-label " })
        </dt>
        <dd>
            @Html.EditorFor(model => model.Premise, new { htmlAttributes = new { @class = "form-control", @rows = 8 } })
            @Html.ValidationMessageFor(model => model.Premise, "", new { @class = "text-danger" })
        </dd>
    </dl>

    <script>CKEDITOR.replace('Premise');</script>
    <style>
        .cke_bottom {
            display: none !important;
        }
    </style>

    <dl class="dl-horizontal">

        <dt>
            @Html.LabelFor(model => model.VideoUpload, htmlAttributes: new { @class = "col-form-label " })
        </dt>
        <dd>
            @Html.EditorFor(model => model.VideoUpload, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(model => model.VideoUpload, "", new { @class = "text-danger" })
        </dd>
    </dl>


    <dl class="dl-horizontal">
        <dd>
            <input type="submit" value="Create" class="btn btn-outline-dark" />
        </dd>
    </dl>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
